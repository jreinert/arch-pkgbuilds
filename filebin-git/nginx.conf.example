# NOTE: Add this to your nginx.conf in the http context
# map $http_x_forwarded_proto $fe_https {
#   default off;
#   https on;
# }

# redirect http to https.
#server {
#  listen 80;
#  server_name paste.example.org;
#  return 301 https://$server_name$request_uri;  # enforce https
#}

# paste (ssl/tls)
server {
  listen 80; # comment out if redirect http to https
  listen 443 default ssl;
  ssl_certificate /etc/ssl/certs/server.crt;
  ssl_certificate_key /etc/ssl/private/server.key;
  server_name paste.example.org;
  root /usr/share/webapps/filebin;
  index index.php;
  client_max_body_size 1024M; # set maximum upload size

  access_log  /var/log/nginx/filebin_access.log;
  error_log   /var/log/nginx/filebin_error.log;

  proxy_set_header X-Forwarded-Proto $scheme;

  # deny direct access
  location ~ ^/(data/upload|application|system|\.ht) {
    deny all;
  }

  # default try order
  location / {
    try_files $uri $uri/ @ee;
  }

  location /data {
    access_log off;
    expires 1y;
    add_header Pragma public;
    add_header Cache-Control "public";
  }

  location @ee {
    rewrite ^(.*) /index.php?$1 last;
  }

  location ~ ^(?<script_name>.+?\.php)(?<path_info>/.*)?$ {
    try_files $script_name = 404;
    fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
    fastcgi_param PHP_VALUE "upload_max_filesize = 1024M \n post_max_size = 1024M";
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

    fastcgi_param HTTPS $fe_https;
    include fastcgi_params;
  }
}
